(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{246:function(t,a,s){"use strict";s.r(a);var e=s(6),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"springboot-框架解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#springboot-框架解析"}},[t._v("#")]),t._v(" Springboot 框架解析")]),t._v(" "),a("blockquote",[a("p",[t._v("参考资料："),a("a",{attrs:{href:"https://www.jianshu.com/p/b934b0d72602",target:"_blank",rel:"noopener noreferrer"}},[t._v("entity,bo,vo,po,dto,pojo 如何理解和区分"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"_1、对象及分层概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、对象及分层概念"}},[t._v("#")]),t._v(" 1、对象及分层概念")]),t._v(" "),a("ul",[a("li",[t._v("Entity：最常用的实体类，基本和数据表一一对应，一个实体一张表")]),t._v(" "),a("li",[t._v("Bo：business object，业务对象，将业务逻辑封装为一个对象，通过调用 dao 方法，结合 po 或 vo 进行业务操作。")]),t._v(" "),a("li",[t._v("Vo：value object，值对象，用于业务层之间传递数据，由 new 创建，gc 回收,主要体现在视图的对象，对于一个 WEB 页面将整个页面的属性封装成一个对象，然后用一个 VO 对象在控制层与视图层进行传输交换。")]),t._v(" "),a("li",[t._v("Po：persistant object，持久层对象，对应数据库中表的字段，一个 Po 对应数据库中的一条记录")]),t._v(" "),a("li",[t._v("Dto：data transfer object，数据传输对象，接口间传递的数据封装")]),t._v(" "),a("li",[t._v("Pojo：plian ordinary java object，简单无规则 java 对象，最基本的 Java Bean 只有属性加上 get 和 set 方法，可以转换为 Po，Dto，Vo")]),t._v(" "),a("li",[t._v("Dao：data access object，数据访问对象，负责持久层的操作，主要用来封装数据的访问，注意不是对数据库的访问")]),t._v(" "),a("li",[t._v("Controller：控制层，业务层与视图层打交道的中间层，负责传输 vo 对象和调用 bo 对象，负责视图层请求的数据处理后响应给视图层。")]),t._v(" "),a("li",[t._v("View：视图层，由静态资源、jsp 等文件形成")]),t._v(" "),a("li",[t._v("Assembler：组装类，对象转换")])]),t._v(" "),a("p",[t._v("相关思想：")]),t._v(" "),a("ul",[a("li",[t._v("依赖倒置：不为基础层依赖领域层，是基础层和领域层互相不依赖，而是共同依赖一组抽象接口")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.infoq.cn/article/alibaba-freshhema-ddd-practice",target:"_blank",rel:"noopener noreferrer"}},[t._v("DDD 思想及充血和贫血模式"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"_2、spring-mvc-con"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、spring-mvc-con"}},[t._v("#")]),t._v(" 2、spring mvc：con")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("src"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("main"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" java"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("icbc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hz1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("inforisk"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("rule\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" common"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" RuleConstant"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("java   \t\t\t\t\t\t\t "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//常量定义")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" controller：LinkCtlRuleController"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("java     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//controller接口定义，调用service接口")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" vo：LinkCtlRuleQueryVo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("java、LinkCtlRuleDetailDto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("java   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//controller接口输入输出类")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" service：LinkCtlRuleServiceImpl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("java、LinkCtlRuleService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("java  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//服务接口和实现类")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" dao：LinkRuleDao"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("java、LinkRuleDaoImpl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("java   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//数据访问接口")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" mapper：LinkctlRuleMapper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("java、LinkctlRuleMapper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xml  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//数据接入层")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" entity：LinkctlRule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("java   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//数据表对应的实体类")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" java"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("icbc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hz1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("inforisk"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Application"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("java  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//启动类")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" resources  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//静态资源及相关配置")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" config：ssic"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pub\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v("：F5Check"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//静态资源")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" application"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("properties "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//工程配置")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("src"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" java"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("icbc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hz1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("inforisk"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("rule   \t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//单元测试类，接口实现类")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" controller：LinkCtlRuleControllerTest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("java\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" dao：LinkRuleDaoImplTest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("java\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" service：LinkCtlRuleServiceImplTest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("java\n")])])]),a("h3",{attrs:{id:"_1、controller"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、controller"}},[t._v("#")]),t._v(" 1、controller")]),t._v(" "),a("ul",[a("li",[t._v("@RestController")]),t._v(" "),a("li",[t._v("@ApiVersion(1)")]),t._v(" "),a("li",[t._v('@Api(value="xxx", produces="application/json")')]),t._v(" "),a("li",[t._v('@RequestMapping(value="/linkctl/rule")')]),t._v(" "),a("li",[t._v('@ApiOperation(value="xxx")')]),t._v(" "),a("li",[t._v('@PostMapping(value="/delete")@GetMapping(value="/getInfos")')]),t._v(" "),a("li",[t._v("@RequestBody、@RequestParam(required = false)")]),t._v(" "),a("li",[t._v("@Validated")])]),t._v(" "),a("h3",{attrs:{id:"_2、dao"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、dao"}},[t._v("#")]),t._v(" 2、dao")]),t._v(" "),a("ul",[a("li",[t._v("@UsingDataSource(DataSources.GCMS_GMIS)")])]),t._v(" "),a("h3",{attrs:{id:"_3、entity"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、entity"}},[t._v("#")]),t._v(" 3、entity")]),t._v(" "),a("ul",[a("li",[t._v('@Table(name="GMIS.AFW_MAG")')]),t._v(" "),a("li",[t._v("@Id")]),t._v(" "),a("li",[t._v('@Column(name="AREA_CODE")')]),t._v(" "),a("li",[t._v("@PostConstruct")])]),t._v(" "),a("h3",{attrs:{id:"_4、vo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、vo"}},[t._v("#")]),t._v(" 4、vo")]),t._v(" "),a("ul",[a("li",[t._v('@ApiModel(value="xxx", description="xxx")')])]),t._v(" "),a("h3",{attrs:{id:"_5、启动类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、启动类"}},[t._v("#")]),t._v(" 5、启动类")]),t._v(" "),a("ul",[a("li",[t._v('@SpringBootApplication(scanBasePackages={"com.icbc.hz1.inforisk"})')]),t._v(" "),a("li",[t._v('@EnableMultipleDataSource(dataSourceName={"DataSources.GCMS_GMAG"}, defaultName="xxx", databaseType="xxx")')]),t._v(" "),a("li",[t._v('@MapperScan(basePackages={"xxxx"}, sqlSessionFactoryRef="xx",configs={})')])]),t._v(" "),a("h3",{attrs:{id:"_7、测试类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7、测试类"}},[t._v("#")]),t._v(" 7、测试类")]),t._v(" "),a("ul",[a("li",[t._v("@RunWith(MockitoJUnitRunner.class)")]),t._v(" "),a("li",[t._v("@InjectMocks")]),t._v(" "),a("li",[t._v("@Mock")]),t._v(" "),a("li",[t._v("@Test")]),t._v(" "),a("li",[t._v("@Before")])]),t._v(" "),a("h3",{attrs:{id:"_8、配置类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8、配置类"}},[t._v("#")]),t._v(" 8、配置类")]),t._v(" "),a("ul",[a("li",[t._v("@Configuration")]),t._v(" "),a("li",[t._v("@AutoConfigureBefore({xxxxx.class})")]),t._v(" "),a("li",[t._v("@Bean")]),t._v(" "),a("li",[t._v("@ConditionalOnProperty")]),t._v(" "),a("li",[t._v("@Value(\"# { @environment['shire.sso.maxSession'] ?: 1}\")")])]),t._v(" "),a("h2",{attrs:{id:"_3、常用注解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、常用注解"}},[t._v("#")]),t._v(" 3、常用注解")]),t._v(" "),a("h3",{attrs:{id:"_1、注解相关操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、注解相关操作"}},[t._v("#")]),t._v(" 1、注解相关操作")]),t._v(" "),a("ul",[a("li",[t._v("@Target：注解作用域，TYPE 可用于类或接口上，METHOD 表示修饰方法")]),t._v(" "),a("li",[t._v("@Retention：注解生命周期")]),t._v(" "),a("li",[t._v("@Documented：注解被 javadoc 工具记录")]),t._v(" "),a("li",[t._v("@Import：通过导入方式实现把实例加入 springIOC 容器中")]),t._v(" "),a("li",[t._v("@Interface：注解类定义，jdk1.5 后引入")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("@"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Target")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("ElementType"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TYPE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//注解作用域：类或接口")]),t._v("\n@"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Retention")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("RetentionPolicy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RUNTIME")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//保留在运行时")]),t._v("\n@Documented\n@"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Import")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("RuleEngineConfiguration"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("class"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" @"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EnableRuleEngine")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2、配置类相关操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、配置类相关操作"}},[t._v("#")]),t._v(" 2、配置类相关操作")]),t._v(" "),a("ul",[a("li",[t._v("@Configuration：定义配置类，内部包含有被@Bean 注解的方法，这些方法被 ApplicationContext 上下文类进行扫描，并构建对于的 bean，加入 spring 容器中")]),t._v(" "),a("li",[t._v("@Bean：方法级注解，产生一个 Bean 对象。initMethod 属性和 destoryMethod 属性，指定 Bean 在构造之后和销毁之前需要执行的方法名。获取使用注解：\n"),a("ul",[a("li",[t._v("@PostConstruct：构造函数执行完之后执行")]),t._v(" "),a("li",[t._v("@PreDestroy：bean 销毁前执行\n@scope：实例范围")])])]),t._v(" "),a("li",[t._v("Singleton：单例\n"),a("ul",[a("li",[t._v("Prototype：每次调用新建一个 Bean 的实例")]),t._v(" "),a("li",[t._v("Request：Web 项目中，给每一个 http request 新建一个 Bean 实例")]),t._v(" "),a("li",[t._v("Session：web 项目中，给每一个 http session 新建一个 Bean 实例")])])]),t._v(" "),a("li",[t._v("@lazy：懒加载，默认在容器启动的时候创建对象，修改为第一个使用时创建对象并实例化")]),t._v(" "),a("li",[t._v('@profile("development")：标记不同的配置环境，通常应用于不同环境启动')]),t._v(" "),a("li",[t._v("@Conditional：满足条件给容器注册 bean")])]),t._v(" "),a("h3",{attrs:{id:"_3、依赖注入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、依赖注入"}},[t._v("#")]),t._v(" 3、依赖注入")]),t._v(" "),a("h4",{attrs:{id:"_1、注解声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、注解声明"}},[t._v("#")]),t._v(" 1、注解声明")]),t._v(" "),a("ul",[a("li",[t._v("@Component：组件，没有明确的角色")]),t._v(" "),a("li",[t._v('@Service：业务逻辑层使用，生成 bean 时规则，第一个变小写，两个字母都大写则会都变为小写，使用@Service("xx")重定义类名字')]),t._v(" "),a("li",[t._v("@Repository：在数据访问层 DAO 层使用")]),t._v(" "),a("li",[t._v("@Controller：在展现层 MVC 使用")])]),t._v(" "),a("h4",{attrs:{id:"_2、注入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、注入"}},[t._v("#")]),t._v(" 2、注入")]),t._v(" "),a("ul",[a("li",[t._v("@Autowired：Spring 提供的注解。类型、限定符、命名匹配，配合@Qualifier 注解，指令 beanName")]),t._v(" "),a("li",[t._v("@Inject：JSR-330 提供的注解。类型、限定符、命名匹配，配合@Named 注解，指定 beanName")]),t._v(" "),a("li",[t._v("@Resource：JSR-250 提供的注解。命名、类型、限定符匹配")])]),t._v(" "),a("p",[t._v("解析：@Autowired、@Inject、@Resource 可注解在 set 方法上或者属性上，从代码清晰度考虑，建议注解在属性")]),t._v(" "),a("h4",{attrs:{id:"_3、扩展"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、扩展"}},[t._v("#")]),t._v(" 3、扩展")]),t._v(" "),a("p",[t._v("BeanPostProcessor 定义了两个接口：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeanPostProcessor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//前置处理：bean初始化方法调用前被调用")]),t._v("\n   Object "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("postProcessBeforeInitialization")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object bean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" String beanName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" throws BeansException"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//后置处理：bean初始化方法调用后被调用")]),t._v("\n   Object "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("postProcessAfterInitialization")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object bean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" String beanName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" throws BeansException"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_4、内置注解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、内置注解"}},[t._v("#")]),t._v(" 4、内置注解")]),t._v(" "),a("ul",[a("li",[t._v("@Override：重写方法")]),t._v(" "),a("li",[t._v("@Deprecated：过时的，已经被新的形式取代")]),t._v(" "),a("li",[t._v("@FuntionalInterface：用于接口，被注解的接口是一个函数式接口，仅包含一个抽象方法的接口，有 lambda 表达式使用，非函数式接口报错")]),t._v(" "),a("li",[t._v("@SuppressWarning：抑制编译器可能的警告")])])])}),[],!1,null,null,null);a.default=n.exports}}]);