(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{199:function(t,s,a){t.exports=a.p+"assets/img/nginxconf.55330824.png"},245:function(t,s,a){"use strict";a.r(s);var r=a(6),n=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"nginx-总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx-总结"}},[t._v("#")]),t._v(" nginx 总结")]),t._v(" "),s("blockquote",[s("p",[t._v("参考资料:")])]),t._v(" "),s("blockquote",[s("p",[t._v("1、"),s("a",{attrs:{href:"https://www.hangge.com/blog/cache/detail_2979.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("nginx 反向代理 location 和 proxy_pass 参数"),s("OutboundLink")],1),s("br"),t._v("\n2、"),s("a",{attrs:{href:"https://blog.csdn.net/u010391029/article/details/50395680",target:"_blank",rel:"noopener noreferrer"}},[t._v("nginx 之 proxy_redirect 详解"),s("OutboundLink")],1),s("br"),t._v("\n3、"),s("a",{attrs:{href:"https://blog.csdn.net/weixin_43122090/article/details/105461971",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nginx 面试题"),s("OutboundLink")],1),s("br"),t._v("\n4、"),s("a",{attrs:{href:"https://blog.csdn.net/wangbin_0729/article/details/82109693",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nginx 配置文件详解"),s("OutboundLink")],1),s("br"),t._v("\n5、"),s("a",{attrs:{href:"https://blog.csdn.net/tjcyjd/article/details/50695922",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nginx 配置文件解析"),s("OutboundLink")],1),s("br")])]),t._v(" "),s("h2",{attrs:{id:"_1、简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、简介"}},[t._v("#")]),t._v(" 1、简介")]),t._v(" "),s("h3",{attrs:{id:"_1、nginx-简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、nginx-简介"}},[t._v("#")]),t._v(" 1、nginx 简介")]),t._v(" "),s("p",[t._v("Nginx 是一个轻量级、高性能的反向代理 Web 服务器，他实现非常高效的反向代理、负载平衡，他可以处理 2-3 万并发连接数，官方监测能支持 5 万并发。")]),t._v(" "),s("h3",{attrs:{id:"_2、优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、优缺点"}},[t._v("#")]),t._v(" 2、优缺点")]),t._v(" "),s("ul",[s("li",[t._v("优点\n"),s("ul",[s("li",[t._v("占内存小，高并发处理响应快：开启 10 个 nginx 才占 150M 内存、2-3 万并发连接数")]),t._v(" "),s("li",[t._v("配置简单，功能强大：可实现 http 服务器、虚拟主机、反向代理、负载均衡")]),t._v(" "),s("li",[t._v("稳定性高，节省带宽：宕机的概率非常小，支持 GZIP 压缩，可以添加浏览器本地缓存")])])]),t._v(" "),s("li",[t._v("缺点：nginx 处理静态文件好,耗费内存少，动态处理差例如处理动态页面，一般前端用 nginx 作为反向代理抗住压力")])]),t._v(" "),s("h3",{attrs:{id:"_3、应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、应用场景"}},[t._v("#")]),t._v(" 3、应用场景")]),t._v(" "),s("ul",[s("li",[t._v("http 服务器：可以独立提供 http 服务，做网页静态服务器。")]),t._v(" "),s("li",[t._v("虚拟主机：可以实现在一台服务器虚拟出多个网站，例如个人网站使用的虚拟机。")]),t._v(" "),s("li",[t._v("反向代理，负载均衡：当网站的访问量达到一定程度后，单台服务器不能满足用户的请求时，需要用多台服务器集群可以使用 nginx 做反向代理。并且多台服务器可以平均分担负载，不会应为某台服务器负载高宕机而某台服务器闲置的情况。")]),t._v(" "),s("li",[t._v("安全控制：可以配置安全管理、比如防 sql 注入，比如可以使用 Nginx 搭建 API 接口网关，对每个接口服务进行拦截。")])]),t._v(" "),s("h3",{attrs:{id:"_3、正向与反向代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、正向与反向代理"}},[t._v("#")]),t._v(" 3、正向与反向代理")]),t._v(" "),s("ul",[s("li",[t._v("正向代理（发送请求方的代理）\n"),s("ul",[s("li",[t._v("正向代理屏蔽客户端，当我们想要访问外网时，先经过正向代理服务器，去帮我们访问互联网")]),t._v(" "),s("li",[t._v("正向代理可以添加访问资源的控制策略")])])]),t._v(" "),s("li",[t._v("反向代理（服务接收方的代理）\n"),s("ul",[s("li",[t._v("反向代理屏蔽服务器，当外网想访问我们的服务器时，先访问反向代理服务器，再转发到我们的服务器")]),t._v(" "),s("li",[t._v("对服务器起到保护作用，隐藏源服务器的存在和特性，用于安全控制，可充当互联网云和 web 服务器的中间层")]),t._v(" "),s("li",[t._v("应用：解决“同源策略”造成的跨域问题，浏览器发送请求后，统一被 nginx 反向代理服务器接收，不同路由通过 location+upstream 进行分发给后端的业务处理服务器进行处")])])])]),t._v(" "),s("h2",{attrs:{id:"_2、nginx-配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、nginx-配置"}},[t._v("#")]),t._v(" 2、nginx 配置")]),t._v(" "),s("h3",{attrs:{id:"_1、程序目录结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、程序目录结构"}},[t._v("#")]),t._v(" 1、程序目录结构")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("# tree "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("usr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("local"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("usr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("local"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx\n├── client_body_temp\n├── conf                             # Nginx所有配置文件的目录\n│   ├── fastcgi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conf                 # fastcgi相关参数的配置文件\n│   ├── fastcgi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("default         # fastcgi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conf的原始备份文件\n│   ├── fastcgi_params               # fastcgi的参数文件\n│   ├── fastcgi_params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("default\n│   ├── koi"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("utf\n│   ├── koi"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("win\n│   ├── mime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("types                   # 媒体类型\n│   ├── mime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("types"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("default\n│   ├── nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conf                   # Nginx主配置文件\n│   ├── nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("default\n│   ├── scgi_params                  # scgi相关参数文件\n│   ├── scgi_params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("default\n│   ├── uwsgi_params                 # uwsgi相关参数文件\n│   ├── uwsgi_params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("default\n│   └── win"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("utf\n├── fastcgi_temp                     # fastcgi临时数据目录\n├── html                             # Nginx默认站点目录\n│   ├── 50x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html                     # 错误页面优雅替代显示文件，例如当出现"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("502")]),t._v("错误时会调用此页面\n│   └── index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html                   # 默认的首页文件\n├── logs                             # Nginx日志目录\n│   ├── access"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log                   # 访问日志文件\n│   ├── error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log                    # 错误日志文件\n│   └── nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pid                    # pid文件，Nginx进程启动后，会把所有进程的"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ID")]),t._v("号写到此文件\n├── proxy_temp                       # 临时目录\n├── sbin                             # Nginx命令目录\n│   └── nginx                        # Nginx的启动命令\n├── scgi_temp                        # 临时目录\n└── uwsgi_temp                       # 临时目录\n")])])]),s("h3",{attrs:{id:"_2、配置文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、配置文件"}},[t._v("#")]),t._v(" 2、配置文件")]),t._v(" "),s("h4",{attrs:{id:"_1、总体简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、总体简介"}},[t._v("#")]),t._v(" 1、总体简介")]),t._v(" "),s("p",[t._v("nginx.conf 由多个块组成，最外面的块是 main，main 包含 Events 和 HTTP，HTTP 包含 upstream 和多个 Server，Server 又包含多个 location：main（全局设置）、server（主机设置）、upstream（负载均衡服务器设置）和 location（URL 匹配特定位置的设置）")]),t._v(" "),s("ul",[s("li",[t._v("main 块设置的指令将影响其他所有设置；")]),t._v(" "),s("li",[t._v("server 块的指令主要用于指定主机和端口；")]),t._v(" "),s("li",[t._v("upstream 指令主要用于负载均衡，设置一系列的后端服务器；")]),t._v(" "),s("li",[t._v("location 块用于匹配网页位置。")])]),t._v(" "),s("p",[t._v("这四者之间的关系式：server 继承 main，location 继承 server，upstream 既不会继承其他设置也不会被继承。 在这四个部分当中，每个部分都包含若干指令，这些指令主要包含 Nginx 的主模块指令、事件模块指令、HTTP 核心模块指令，同时每个部分还可以使用其他 HTTP 模块指令，例如 Http SSL 模块、HttpGzip Static 模块和 Http Addition 模块等。\n"),s("img",{attrs:{src:a(199),alt:""}})]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("user root"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                        #主模块指令，指定Nginx Worker进程运行用户以及用户组\nworker_processes  auto；          #指定nginx要开启的进程树，每个进程平均耗费10M"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("12M内存，建议和cpu的数量一致\nerror_log  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  #全局错误日志文件"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("日志输出级别有debug、info、notice、warn、error、crit可供选择\npid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    #用来指定进程pid（进程标识符）的存储文件位置\n\n# 事件区块开始\nevents "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    worker_connections  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),t._v("；      # 每个worker进程支持的最大连接数\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n# "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),t._v("区块开始\nhttp "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    include       mime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("types；      # Nginx支持的媒体类型库文件，类型由mime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type文件定义\n    default_type  text"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("plain；      # 默认的媒体类型\n    sendfile        on；       \t\t # 开启高效传输模式\n    keepalive_timeout  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("65")]),t._v("；       \t # 连接超时\n    server_tokens off"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("              # 关闭nginx版本提示\n    client_max_body_size 50m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("       # 设置允许客户端请求的最大的单个文件字节数\n    gzip on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                        # 开启gzip压缩输出，减少网络传输\n\n    #log_format是Nginx的HttpLog模块指令，用于指定Nginx日志的输出格式， main和log404为此日志输出格式的名称\n    log_format main "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$remote_addr - $remote_user [$time_local] \"$request\" '")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$status $body_bytes_sent \"$http_referer\" '")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'"$http_user_agent" "$http_x_forwarded_for"\'')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    log_format log404 "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$status [$time_local] $remote_addr $host$request_uri $sent_http_location'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t\t#指定了一个负载均衡器的名称subloanIntrantDomain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("在后面需要的地方直接调用即可。\n    upstream subloanIntrantDomain "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" #默认策略为轮训\n    \t\tip_hash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t\t#hash $request_uri"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t  server "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("122.70")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".77")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".84")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9081")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t  server "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("122.70")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".77")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".84")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9090")]),t._v(" down"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   #当前的server暂时不参与负载均衡\n    \t  #允许请求失败的次数"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("当超过最大次数时，返回proxy_next_upstream 模块定义的错误；\n    \t  #在经历了max_fails次失败后，暂停服务的时间20s\n    \t  server "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("122.70")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".77")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".84")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9091")]),t._v(" max_fails"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" fail_timeout"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("20s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    # 第一个Server区块开始，表示一个独立的虚拟主机站点\n    server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        listen       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("；      \t\t\t\t\t\t\t# 提供服务的端口，默认"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n        server_name  localhost；       \t\t\t# 提供服务的域名主机名\n\n        #设置日志按照时间进行分割，$year"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("$month"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("$day"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("$hour"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("access"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log定义按天进行分割\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("$time_iso8601 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        \t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" $year $1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" $month $2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" $day $3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" $hour $4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" $minutes $5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" $seconds $6"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        #access_log用来指定此虚拟主机的访问日志存放路径，最后的main用于指定访问日志的输出格式\n        access_log "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("$year"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("$month"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("$day"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("$hour"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("access"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log main"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        # 第一个location区块开始，动态请求\n        location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("ICBCWAPBankB7HR"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("api"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        \tproxy_http_version "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \tproxy_set_header Host $host"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \tproxy_set_header "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("X")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Real"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IP")]),t._v(" $remote_addr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   #记录客户端ip，被"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),t._v("代理用来表示与它产生"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TCP")]),t._v("连接的设备"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IP")]),t._v("\n        \tproxy_set_header "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("X")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Forwarder"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("For $proxy_add_x_forwarded_for"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" #记录"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),t._v("请求端真实"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IP")]),t._v("\n        \t#以上三行，目的是将代理服务器收到的用户的信息传到真实服务器上\n        \tproxy_set_header Accept"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Encording "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \tproxy_set_header Connection "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Keep-Alive"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \tproxy_pass http"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("subloanIntrantDomain"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("ICBCWAPBankB7HR"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \tproxy_redirect off"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n         # 第二个location区块开始，静态页面\n        location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("ICBCWAPBankB7HR"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          alias "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("client"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   #http"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("xxxx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("ICBCWAPBankB7HR"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("访问："),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("client"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n          index index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    # 默认的首页文件，多个用空格分开\n          add_header "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("X")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Frame"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("options "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'SAMEORIGIN'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" #同源可在 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("frame"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("iframe"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 或者 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("object"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 中展现\n          #启用"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("XSS")]),t._v("过滤，如果检测到攻击，浏览器将不会清除页面，而是阻止页面加载\n          add_header "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("X")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("XSS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Protection "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1;mode=block'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          add_header "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("X")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Content"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Options "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nosniff'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          expires 4h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  #缓存4h\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        error_page   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("403")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html；     \t\t# 出现对应的http状态码时，使用error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html回应客户\n\n        # location区块开始，访问50x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html\n        location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            root "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("ICBCWAPBankB7HR；      \t\t\t# 指定对应的站点目录为html\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    ##安全控制，防sql注入以及xss\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("$request_method "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GET")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("POST")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PUT")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DELETE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("444")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"_2、location-描述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、location-描述"}},[t._v("#")]),t._v(" 2、location 描述")]),t._v(" "),s("p",[t._v("location 指令的作用是根据用户请求的 URI 来执行不同的应用，也就是根据用户请求的网站 URL 进行匹配，匹配成功即进行相关的操作。location 支持正则表达式匹配，也支持条件判断匹配，用户可以通过 location 指令实现 Nginx 对动、静态网页进行过滤处理。使用 location URL 匹配配置还可以实现反向代理，用于实现 PHP 动态解析或者负载负载均衡。")]),t._v(" "),s("ul",[s("li",[t._v("语法")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("匹配符")]),t._v(" "),s("th",[t._v("匹配规则")]),t._v(" "),s("th",[t._v("优先级")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("=")]),t._v(" "),s("td",[t._v("精确匹配")]),t._v(" "),s("td",[t._v("1")])]),t._v(" "),s("tr",[s("td",[t._v("^~")]),t._v(" "),s("td",[t._v("以某个字符串开头")]),t._v(" "),s("td",[t._v("2")])]),t._v(" "),s("tr",[s("td",[t._v("~")]),t._v(" "),s("td",[t._v("区分大小写的正则匹配")]),t._v(" "),s("td",[t._v("3")])]),t._v(" "),s("tr",[s("td",[t._v("~_")]),t._v(" "),s("td",[t._v("不区分大小写的正则匹配")]),t._v(" "),s("td",[t._v("4")])]),t._v(" "),s("tr",[s("td",[t._v("!~")]),t._v(" "),s("td",[t._v("区分大小写不匹配的正则")]),t._v(" "),s("td",[t._v("5")])]),t._v(" "),s("tr",[s("td",[t._v("!~_")]),t._v(" "),s("td",[t._v("不区分大小写不匹配的正则")]),t._v(" "),s("td",[t._v("6")])]),t._v(" "),s("tr",[s("td",[t._v("/")]),t._v(" "),s("td",[t._v("通用匹配，任何请求都会匹配到")]),t._v(" "),s("td",[t._v("7")])])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("#优先级"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("精确匹配，根路径，eg：https")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("baidu.com.cn")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),t._v("\nlocation "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n#优先级"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("以某个字符串开头"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 从域名开始以av开头的，优先匹配这里，区分大小写，～代表输入字符\n#eg"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" https"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("baidu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cn"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("av"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("login"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("匹配，https"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("baidu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cn"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("login"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("av不匹配\n#root实际访问路径：https"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("baidu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cn"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("av"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("av"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\nlocation "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("av "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  root "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("av"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n#优先级"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("，区分大小写的正则匹配，匹配"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("media"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("路径\nlocation "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("media "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  alias "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n#优先级"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" ，不区分大小写的正则匹配，所有的"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jpg"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("gif"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("png 都走这里\nlocation "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\\"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jpg"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("gif"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("png"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("js"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("css"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("$ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  root  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("av"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n#优先"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("，通用匹配\nlocation "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("403")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("常用指令\n"),s("ul",[s("li",[t._v("proxy_pass：代理转发\n"),s("ul",[s("li",[t._v("url 加上/为绝对路径，则 Nginx 不会把 location 中匹配的路径部分加入代理 uri")]),t._v(" "),s("li",[t._v("url 不加/，则 Nginx 会把 location 中匹配的路径部分加入代理 uri")])])]),t._v(" "),s("li",[t._v("proxy_redirect：修改被代理服务器返回的响应头中的 location 头域跟 refresh 头域数值\n"),s("ul",[s("li",[t._v("值为：default|off|redirect replacement\n"),s("ul",[s("li",[t._v("default：默认")]),t._v(" "),s("li",[t._v("off：禁止所有的 proxy_redirect 指令")])])]),t._v(" "),s("li",[t._v("代替的字段中可以不写服务器名，使用\\ ，使用服务器的基本名称和端口")])])]),t._v(" "),s("li",[t._v("nginx 指定文件路径有两种方式 root 和 alias，root 与 alias 主要区别在于 nginx 如何解释 location 后面的 uri，这会使两者分别以不同的方式将请求映射到服务器文件上,说白了就是两者拼接文件路径的手段不一样。\n"),s("ul",[s("li",[t._v("root 的处理结果是：root 路径＋ location 路径")]),t._v(" "),s("li",[t._v("alias 的处理结果是：使用 alias 路径替换 location 路径")])])]),t._v(" "),s("li",[t._v("expires：设置缓存时间\n"),s("ul",[s("li",[t._v("时间戳会设置 expires 报文头")]),t._v(" "),s("li",[t._v("正数或零：设置 cache-control：max-age=x")]),t._v(" "),s("li",[t._v("负数：nocache")])])]),t._v(" "),s("li",[t._v("proxy_cache：服务器的缓存配置，可在转发请求时对资源进行缓存")])])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  listen   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  server_name  www"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("boke"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//重定向至该地址和端口")]),t._v("\n    proxy_pass http"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".154")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//修改返回的响应头中的location")]),t._v("\n    proxy_redirect http"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".154")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("wuman"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("  http"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("www"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("boke"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("wuman"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n#测试\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("# curl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("I")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("http")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("www"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("boke"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("wuman\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("301")]),t._v(" Moved Permanently\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Server")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" nginx\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Date")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Thu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v(" Dec "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2015")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("08")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("34")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GMT")]),t._v("\nContent"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" text"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" charset"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("iso"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8859")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Connection")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" keep"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("alive\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Location")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" http"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("www"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("boke"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("wuman"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//4h的强缓存")]),t._v("\nlocation "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("xxxx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  alias "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("client"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  index index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  expires 4h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"_3、负载均衡配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、负载均衡配置"}},[t._v("#")]),t._v(" 3、负载均衡配置")]),t._v(" "),s("p",[t._v("upstream 是 Nginx 的 HTTP Upstream 模块，这个模块通过一个简单的调度算法来实现客户端 IP 到后端服务器的负载均衡。")]),t._v(" "),s("p",[t._v("Nginx 的负载均衡模块目前支持 4 种调度算法，后两项属于第三方的调度方法。")]),t._v(" "),s("ul",[s("li",[t._v("轮询（默认）：每个请求按时间顺序逐一分配到不同的后端服务器，如果后端某台服务器宕机，故障系统被自动剔除，使用户访问不受影响；")]),t._v(" "),s("li",[t._v("Weight：指定轮询权值，Weight 值越大，分配到的访问机率越高，主要用于后端每个服务器性能不均的情况下；")]),t._v(" "),s("li",[t._v("ip_hash：每个请求按访问 IP 的 hash 结果分配，这样来自同一个 IP 的访客固定访问一个后端服务器，有效解决了动态网页存在的 session 共享问题；")]),t._v(" "),s("li",[t._v("fair：比上面两个更加智能的负载均衡算法。此种算法可以依据页面大小和加载时间长短智能地进行负载均衡，也就是根据后端服务器的响应时间来分配请求，响应时间短的优先分配。Nginx 本身是不支持 fair 的，如果需要使用这种调度算法，必须下载 Nginx 的 upstream_fair 模块；")]),t._v(" "),s("li",[t._v("url_hash：按访问 url 的 hash 结果来分配请求，使每个 url 定向到同一个后端服务器，可以进一步提高后端缓存服务器的效率。Nginx 本身是不支持 url_hash 的，如果需要使用这种调度算法，必须安装 Nginx 的 hash 软件包。")])]),t._v(" "),s("p",[t._v("在 HTTP Upstream 模块中，可以通过 server 指令指定后端服务器的 IP 地址和端口，同时还可以设定每个后端服务器在负载均衡调度中的状态。常用的状态有：")]),t._v(" "),s("ul",[s("li",[t._v("down：表示当前的 server 暂时不参与负载均衡；")]),t._v(" "),s("li",[t._v("backup：预留的备份机器。当其他所有的非 backup 机器出现故障或者忙的时候，才会请求 backup 机器，因此这台机器的压力最轻；")]),t._v(" "),s("li",[t._v("max_fails：允许请求失败的次数，默认为 1。当超过最大次数时，返回 proxy_next_upstream 模块定义的错误；")]),t._v(" "),s("li",[t._v("fail_timeout：在经历了 max_fails 次失败后，暂停服务的时间。max_fails 可以和 fail_timeout 一起使用。")])]),t._v(" "),s("p",[t._v("注意，当负载调度算法为 ip_hash 时，后端服务器在负载均衡调度中的状态不能是 weight 和 backup。")]),t._v(" "),s("h4",{attrs:{id:"_4、使用变量解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、使用变量解析"}},[t._v("#")]),t._v(" 4、使用变量解析")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("日志格式设置：")]),t._v(" "),s("ul",[s("li",[t._v("$remote_addr与$http_x_forwarded_for 用以记录客户端的 ip 地址；")]),t._v(" "),s("li",[t._v("$remote_user：用来记录客户端用户名称；")]),t._v(" "),s("li",[t._v("$time_local： 用来记录访问时间与时区；")]),t._v(" "),s("li",[t._v("$request： 用来记录请求的 url 与 http 协议；")]),t._v(" "),s("li",[t._v("$status： 用来记录请求状态；成功是 200，")]),t._v(" "),s("li",[t._v("$body_bytes_sent ：记录发送给客户端文件主体内容大小；")]),t._v(" "),s("li",[t._v("$http_referer：用来记录从那个页面链接访问过来的；")]),t._v(" "),s("li",[t._v("$http_user_agent：记录客户浏览器的相关信息；")])])])]),t._v(" "),s("p",[t._v("通常 web 服务器放在反向代理的后面，这样就不能获取到客户的 IP 地址了，通过$remote_add 拿到的 IP 地址是反向代理服务器的 iP 地址。反向代理服务器在转发请求的 http 头信息中，可以增加 x_forwarded_for 信息，用以记录原有客户端的 IP 地址和原来客户端的请求的服务器地址。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("其他变量")]),t._v(" "),s("ul",[s("li",[t._v("$args 此变量与请求行中的参数相等")]),t._v(" "),s("li",[t._v("$content_length 等于请求行的“Content_Length”的值。")]),t._v(" "),s("li",[t._v("$content_type 等同与请求头部的”Content_Type”的值")]),t._v(" "),s("li",[t._v("$document_root 等同于当前请求的 root 指令指定的值")]),t._v(" "),s("li",[t._v("$document_uri与$uri 一样")]),t._v(" "),s("li",[t._v("$host 与请求头部中“Host”行指定的值或是 request 到达的 server 的名字（没有 Host 行）一样")]),t._v(" "),s("li",[t._v("$limit_rate 允许限制的连接速率")]),t._v(" "),s("li",[t._v("$request_method 等同于 request 的 method，通常是“GET”或“POST”")]),t._v(" "),s("li",[t._v("$remote_addr 客户端 ip")]),t._v(" "),s("li",[t._v("$remote_port 客户端 port")]),t._v(" "),s("li",[t._v("$remote_user 等同于用户名，由 ngx_http_auth_basic_module 认证")]),t._v(" "),s("li",[t._v("$request_filename 当前请求的文件的路径名，由 root 或 alias 和 URI request 组合而成")]),t._v(" "),s("li",[t._v("$request_body_file")]),t._v(" "),s("li",[t._v("$request_uri 含有参数的完整的初始 URI")]),t._v(" "),s("li",[t._v("$query_string 与$args 一样")]),t._v(" "),s("li",[t._v("$sheeme http 模式（http,https）尽在要求是评估例如")]),t._v(" "),s("li",[t._v("Rewrite ^(.+)$ $sheme://example.com$; Redirect;")]),t._v(" "),s("li",[t._v("$server_protocol 等同于 request 的协议，使用“HTTP/或“HTTP/")]),t._v(" "),s("li",[t._v("$server_addr request 到达的 server 的 ip，一般获得此变量的值的目的是进行系统调用。为了避免系统调用，有必要在 listen 指令中指明 ip，并使用 bind 参数。")]),t._v(" "),s("li",[t._v("$server_name 请求到达的服务器名")]),t._v(" "),s("li",[t._v("$server_port 请求到达的服务器的端口号")]),t._v(" "),s("li",[t._v("$uri 等同于当前 request 中的 URI，可不同于初始值，例如内部重定向时或使用 index")])])])]),t._v(" "),s("h3",{attrs:{id:"_3、常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、常用命令"}},[t._v("#")]),t._v(" 3、常用命令")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("nginx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("t  #检测配置文件是否有语法错误，然后退出\nnginx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("s reopen #重启Nginx\nnginx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("s reload #重新加载Nginx配置文件，然后以优雅的方式重启Nginx\nnginx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("s stop #强制停止Nginx服务\nnginx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("s quit #优雅地停止Nginx服务（即处理完所有请求后再停止服务）\nnginx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("v #显示版本信息并退出\nkillall nginx  #杀死所有nginx进程\n")])])]),s("h3",{attrs:{id:"_4、http-头部解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、http-头部解析"}},[t._v("#")]),t._v(" 4、http 头部解析")]),t._v(" "),s("h4",{attrs:{id:"_1、x-frame-options"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、x-frame-options"}},[t._v("#")]),t._v(" 1、X-Frame-Options")]),t._v(" "),s("p",[t._v("HTTP 响应头是用来给浏览器指示允许一个页面可否在 "),s("code",[t._v("<frame>")]),t._v(", "),s("code",[t._v("</iframe>")]),t._v(" 或者 "),s("code",[t._v("<object>")]),t._v("中展现的标记")]),t._v(" "),s("ul",[s("li",[t._v("DENY：表示该页面不允许在 frame 中展示，即便是在相同域名的页面中嵌套也不允许。")]),t._v(" "),s("li",[t._v("SAMEORIGIN：表示该页面可以在相同域名页面的 frame 中展示。")]),t._v(" "),s("li",[t._v("ALLOW-FROM uri：表示该页面可以在指定来源的 frame 中展示")])]),t._v(" "),s("h4",{attrs:{id:"_2、host、x-real-ip、x-forwarder-for"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、host、x-real-ip、x-forwarder-for"}},[t._v("#")]),t._v(" 2、Host、X-Real-IP、X-Forwarder-For")]),t._v(" "),s("p",[t._v("参考资料："),s("a",{attrs:{href:"https://www.runoob.com/w3cnote/http-x-forwarded-for.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP X-Forwarded-For 介绍"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("X-Forwarded-For 是一个 HTTP 扩展头部。HTTP/1.1（RFC 2616）协议并没有对它的定义，它最开始是由 Squid 这个缓存代理软件引入，用来表示 HTTP 请求端真实 IP。")]),t._v(" "),s("p",[t._v("XFF 的内容由「英文逗号 + 空格」隔开的多个部分组成，最开始的是离服务端最远的设备 IP，然后是每一级代理设备的 IP。")]),t._v(" "),s("p",[t._v("如果一个 HTTP 请求到达服务器之前，经过了三个代理 Proxy1、Proxy2、Proxy3，IP 分别为 IP1、IP2、IP3，用户真实 IP 为 IP0，那么按照 XFF 标准，服务端最终会收到以下信息：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("X")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Forwarded"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("For"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IP0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IP1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IP2")]),t._v("\n")])])]),s("p",[t._v("X-Real-IP 通常被 HTTP 代理用来表示与它产生 TCP 连接的设备 IP，这个设备可能是其他代理，也可能是真正的请求端。需要注意的是，X-Real-IP 目前并不属于任何标准，代理和 Web 应用之间可以约定用任何自定义头来传递这个信息。")]),t._v(" "),s("p",[t._v("解析：X-Forwarded-For 用于负载均衡算法，基于 XFF 的会话保护，对 x-forwarded-for 字段的内容进行 hash，根据哈希结果进行负载转发，x-forwarded-for 字段的内容相同，就会负载到同一台后端服务器上。其他手段：基于 cookie 的会话保持，安全属性 httponly（只读）、secure（https 传输）、same-site=none（任何第三方携带）/strict（同源携带）")]),t._v(" "),s("h4",{attrs:{id:"_3、x-xss-protection"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、x-xss-protection"}},[t._v("#")]),t._v(" 3、X-XSS-Protection")]),t._v(" "),s("p",[t._v("HTTP X-XSS-Protection 响应头是 Internet Explorer，Chrome 和 Safari 的一个特性，当检测到跨站脚本攻击 ("),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/Cross-site_scripting",target:"_blank",rel:"noopener noreferrer"}},[t._v("XSS (en-US)"),s("OutboundLink")],1),t._v(")时，浏览器将停止加载页面。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("X")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("XSS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Protection"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("X")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("XSS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Protection"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("X")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("XSS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Protection"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" mode"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("block\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("X")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("XSS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Protection"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" report"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("reporting"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("uri"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("ul",[s("li",[t._v("0\n禁止 XSS 过滤。")]),t._v(" "),s("li",[t._v("1\n启用 XSS 过滤（通常浏览器是默认的）。 如果检测到跨站脚本攻击，浏览器将清除页面（删除不安全的部分）。")]),t._v(" "),s("li",[t._v("1;mode=block\n启用 XSS 过滤。 如果检测到攻击，浏览器将不会清除页面，而是阻止页面加载。")]),t._v(" "),s("li",[t._v("1; "),s("code",[t._v("report=<reporting-URI>")]),t._v("(Chromium only)\n启用 XSS 过滤。 如果检测到跨站脚本攻击，浏览器将清除页面并使用 CSP report-uri (en-US) (opens new window)指令的功能发送违规报告。")])]),t._v(" "),s("h4",{attrs:{id:"_4、x-content-type-options"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、x-content-type-options"}},[t._v("#")]),t._v(" 4、X-Content-Type-Options")]),t._v(" "),s("p",[t._v("X-Content-Type-Options HTTP 消息头相当于一个提示标志，被服务器用来提示客户端一定要遵循在 Content-Type (opens new window)首部中对"),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types",target:"_blank",rel:"noopener noreferrer"}},[t._v("MIME 类型"),s("OutboundLink")],1),t._v("的设定，而不能对其进行修改。这就禁用了客户端的"),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#mime_sniffing",target:"_blank",rel:"noopener noreferrer"}},[t._v("MIME 类型嗅探"),s("OutboundLink")],1),t._v("行为，换句话说，也就是意味着网站管理员确定自己的设置没有问题。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("X")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Content"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Options"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" nosniff\n")])])]),s("p",[t._v("下面两种情况的请求将被阻止：")]),t._v(" "),s("ul",[s("li",[t._v('请求类型是"style" 但是 MIME 类型不是 "text/css"，')]),t._v(" "),s("li",[t._v('请求类型是"script" 但是 MIME 类型不是 '),s("a",{attrs:{href:"https://html.spec.whatwg.org/multipage/infrastructure.html#javascript-mime-type",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript MIME 类型"),s("OutboundLink")],1)])]),t._v(" "),s("h4",{attrs:{id:"_5、cache-control、expires、max-age"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、cache-control、expires、max-age"}},[t._v("#")]),t._v(" 5、Cache-control、Expires、max-age")]),t._v(" "),s("ul",[s("li",[t._v("Cache-control 用于控制 HTTP 缓存（在 HTTP/1.0 中可能部分没实现，仅仅实现了 Pragma: no-cache）")]),t._v(" "),s("li",[t._v("Expires 表示存在时间，允许客户端在这个时间之前不去检查（发请求），等同 max-age 的效果。但是如果同时存在，则被 Cache-Control 的 max-age 覆盖。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("Respense Headers\ncache"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("control"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" max"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2592000")]),t._v("           缓存的持续时间\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("expires")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Thu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("04")]),t._v(" Apr "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2019")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("09")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GMT")]),t._v("   缓存的到期时间\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);