(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{259:function(_,v,r){"use strict";r.r(v);var t=r(6),e=Object(t.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"前端网络安全"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#前端网络安全"}},[_._v("#")]),_._v(" 前端网络安全")]),_._v(" "),v("blockquote",[v("p",[_._v("参考资料")]),_._v(" "),v("ul",[v("li",[_._v("1."),v("a",{attrs:{href:"https://snyk.io/node-js/connect",target:"_blank",rel:"noopener noreferrer"}},[_._v("正则表达式的攻击原理"),v("OutboundLink")],1)]),_._v(" "),v("li",[_._v("2."),v("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/22521378",target:"_blank",rel:"noopener noreferrer"}},[_._v("CSRF 攻击"),v("OutboundLink")],1)]),_._v(" "),v("li",[_._v("3."),v("a",{attrs:{href:"https://regex.rip/?",target:"_blank",rel:"noopener noreferrer"}},[_._v("Redos 测试网站"),v("OutboundLink")],1)])])]),_._v(" "),v("h2",{attrs:{id:"_1、浏览器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1、浏览器"}},[_._v("#")]),_._v(" 1、浏览器")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("XSS、CSRF、HTTPS")])]),_._v(" "),v("li",[v("p",[_._v("csp：内容安全策略，可以禁止加载外域代码，禁止外域的提交，Content-Security-Policy ｜ X-XSS-Protection")])]),_._v(" "),v("li",[v("p",[_._v("HSTS：强制客户端使用 HTTPS 与服务端建立连接")])]),_._v(" "),v("li",[v("p",[_._v("X-Frame-Options：控制当前页面是否可以别嵌入到 iframe 中")]),_._v(" "),v("ul",[v("li",[_._v("DENY：表示该页面不允许在 frame 中展示，即便是在相同域名的页面中嵌套也不允许")]),_._v(" "),v("li",[_._v("SAMEORIGIN：表示该页面可以在相同域名页面的 frame 中展示")]),_._v(" "),v("li",[_._v("ALLOW-FROM uri：表示该页面可以在指定来源的 frame 中展示")])])]),_._v(" "),v("li",[v("p",[_._v("SRI（subresource intergrity 子资源的完整性）：请求 cdn 子资源的完整性")]),_._v(" "),v("ul",[v("li",[_._v("jian-xdfs-da-daaa.js：注入到 index.html，并且上传至 cdn")]),_._v(" "),v("li",[_._v("用户在请求的时候，根据 jian-xdfs-da-daaa.js 去请求，而这个文件可能被篡改")]),_._v(" "),v("li",[_._v("打包的时候根据 js 文件内容生成一个 hash 值，并且把 hash 值作为 intergrity 属性注入到 script 上，前端可以⽤ webpack-subresource-integrity 插件实现。")])])]),_._v(" "),v("li",[v("p",[_._v("Referer-Policy：控制 referer 的携带策略")])])]),_._v(" "),v("h3",{attrs:{id:"_1、xss"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1、xss"}},[_._v("#")]),_._v(" 1、XSS")]),_._v(" "),v("p",[_._v("聊一下 xss？思路：概念、攻击类型、如何防范、自己工作中是否遇到？如何解决？")]),_._v(" "),v("h4",{attrs:{id:"_1、概念"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1、概念"}},[_._v("#")]),_._v(" 1、概念")]),_._v(" "),v("p",[_._v("Cross Site Script，xss 垮站脚本攻击，攻击者想尽一切办法把可执行代码注入到网页中")]),_._v(" "),v("h4",{attrs:{id:"_2、攻击类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2、攻击类型"}},[_._v("#")]),_._v(" 2、攻击类型")]),_._v(" "),v("p",[_._v("外在表现上，都有哪些攻击场景：")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("评论区植入 js 代码（即可输入的地方）")])]),_._v(" "),v("li",[v("p",[_._v("url 上拼接 js 代码\n技术角度上，有哪些类型的 xss 攻击：")]),_._v(" "),v("ol",[v("li",[_._v("存储型 Server：服务端存在数据库\n论坛发帖，商品评价，用户私信等这些用户保存数据的网站")])]),_._v(" "),v("p",[_._v("攻击步骤：")]),_._v(" "),v("ul",[v("li",[_._v("攻击者将恶意代码提交到目标网站的数据库中")]),_._v(" "),v("li",[_._v("用户打开目标网站的时候，服务端将评论（恶意代码）从数据库中取出，拼接到 html 返回给浏览器")]),_._v(" "),v("li",[_._v("用户浏览器收到 html 后，混在其中的恶意代码就会执行")]),_._v(" "),v("li",[_._v("窃取用户数据，发放到攻击者网站")])]),_._v(" "),v("ol",{attrs:{start:"2"}},[v("li",[_._v("反射型 Server：拼接在 url 上")])]),_._v(" "),v("p",[_._v("攻击者结合各种手段，诱导用户点击恶意 url，通过 url 传参数的功能，比如网站的搜索或跳转等。")]),_._v(" "),v("p",[_._v("攻击步骤：")]),_._v(" "),v("ul",[v("li",[_._v("攻击者构造出自己的恶意 url")]),_._v(" "),v("li",[_._v("直接执行可执行的恶意代码")])]),_._v(" "),v("ol",{attrs:{start:"3"}},[v("li",[_._v("Dom 型 Browser")])]),_._v(" "),v("p",[_._v("取出和执行恶意代码的操作，由浏览器完成，属于前端 JavaScript ⾃身的安全漏洞，⽽其他两种 XSS 都属于服务端的安全漏洞。")]),_._v(" "),v("p",[_._v("攻击步骤：")]),_._v(" "),v("ul",[v("li",[_._v("攻击者构造出特殊的 URL，其中包含恶意代码。")]),_._v(" "),v("li",[_._v("⽤户打开带有恶意代码的 URL。")]),_._v(" "),v("li",[_._v("⽤户浏览器接收到响应后解析执⾏，前端 JavaScript 取出 URL 中的恶意代码并执⾏。")]),_._v(" "),v("li",[_._v("恶意代码窃取⽤户数据并发送到攻击者的⽹站，或者冒充⽤户的⾏为，调⽤⽬标⽹站的接⼝执⾏攻击者指定的操作。")])])])]),_._v(" "),v("h4",{attrs:{id:"_3、防范攻击"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3、防范攻击"}},[_._v("#")]),_._v(" 3、防范攻击")]),_._v(" "),v("p",[_._v("主旨：防止攻击者提交恶意代码，防止浏览器执行恶意代码")]),_._v(" "),v("ol",[v("li",[_._v("对数据进行严格的输入编码：")])]),_._v(" "),v("ul",[v("li",[_._v("html 元素的编码、js 编码、css 编码、url 编码等；")]),_._v(" "),v("li",[_._v("避免拼接 html，eg：Vue/React 技术栈，避免使用 v-html/dangerouslyHtml")])]),_._v(" "),v("ol",{attrs:{start:"2"}},[v("li",[_._v("CSP：http header，即 Content-Security-Policy，旧浏览器可以设置 X-XSS-Protection")])]),_._v(" "),v("ul",[v("li",[_._v("default-src 'self'：所有内容均来⾃站点的同⼀个源（不包括其⼦域名）")]),_._v(" "),v("li",[_._v("default-src ‘self’ *.trusted.com：允许内容来⾃信任的域名及其⼦域名 (域名不必须与 CSP 设置所在的域名相同)")]),_._v(" "),v("li",[_._v("default-src https://baidu.com：该服务器仅允许通过HTTPS⽅式并仅从lubai.com域名来访问⽂档")])]),_._v(" "),v("ol",{attrs:{start:"3"}},[v("li",[_._v("输入验证：phone，url，电话号码，邮箱做校验判断")]),_._v(" "),v("li",[_._v("开启浏览器的 XSS 防御：http only Cookie，禁止 js 读取 cookie 值，完成 xss 注入也无法窃取 cookie，eg：set-cookie，httponly")]),_._v(" "),v("li",[_._v("验证码")])]),_._v(" "),v("h3",{attrs:{id:"_2、csrf"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2、csrf"}},[_._v("#")]),_._v(" 2、CSRF")]),_._v(" "),v("h4",{attrs:{id:"_1、概念-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1、概念-2"}},[_._v("#")]),_._v(" 1、概念")]),_._v(" "),v("p",[_._v("Cross-Site request forgery，跨站请求伪造：攻击者诱导受害者进⼊恶意⽹站，在第三⽅⽹站中，向被攻击⽹站发送跨站请求。利⽤受害者在被攻击⽹站已经获取的注册凭证，绕过后台的⽤户验证，达到冒充⽤户对被攻击的⽹站执⾏某项操作的⽬的。")]),_._v(" "),v("p",[_._v("攻击步骤：")]),_._v(" "),v("ol",[v("li",[_._v("受害者登录 a.com，并且保留了登录凭证 cookie")]),_._v(" "),v("li",[_._v("攻击者诱导受害者访问 b.com")]),_._v(" "),v("li",[_._v("b.com 向 a.com 发送请求，a.com/xxxx，浏览器就会直接带上 a.com 的 cookie")]),_._v(" "),v("li",[_._v("a.com 收到了请求，验证通过后，执行相应操作")]),_._v(" "),v("li",[_._v("攻击完成，攻击者在受害者不知情的情况下，冒充受害者，让 a.com 执行了自己定义的操作")])]),_._v(" "),v("h4",{attrs:{id:"_2、攻击类型-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2、攻击类型-2"}},[_._v("#")]),_._v(" 2、攻击类型")]),_._v(" "),v("ol",[v("li",[_._v("GET 型：如在⻚⾯的某个 img 中发起⼀个 get 请求")]),_._v(" "),v("li",[_._v("POST 型：通过⾃动提交表单到恶意⽹站")])]),_._v(" "),v("h4",{attrs:{id:"_3、如何防范"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3、如何防范"}},[_._v("#")]),_._v(" 3、如何防范")]),_._v(" "),v("p",[_._v("CSRF 一般发生在第三方域名，攻击者无法获取到 cookie 信息，只是利用浏览器机制使用 cookie")]),_._v(" "),v("ol",[v("li",[_._v("同源策略")])]),_._v(" "),v("ul",[v("li",[_._v("通过检查 request header 中的 origin、referer、host 等，判断请求站点是否是自己允许的站点。\n"),v("ul",[v("li",[_._v("host：任何请求携带，域名和端口号")]),_._v(" "),v("li",[_._v("origin：一般存在于跨域请求中，协议和域名，和 Access-Control-Allow-Origin 一起存在")]),_._v(" "),v("li",[_._v("referer：告知服务器原始 url，其用于所有类型的请求，并且包括：协议+域名+查询参数")])])]),_._v(" "),v("li",[_._v("Referrer-Policy：可设置携带 referer 头，eg：Referrer-Policy: no-referrer ｜ same-origin 等。")])]),_._v(" "),v("ol",{attrs:{start:"2"}},[v("li",[_._v("Cookie SameSite\n"),v("ul",[v("li",[_._v("Strict：完全禁止第三方 cookie，⽐如 a.com 的⻚⾯中访问 b.com 的资源，那么 a.com 中的 cookie 不会被发送到 b.com 服务器，只有从 b.com 的站点去请求 b.com 的资源，才会带上这些 Cookie")]),_._v(" "),v("li",[_._v("Lax：在跨站点的情况下，从第三⽅站点链接打开和从第三⽅站点提交 Get ⽅式的表单这两种⽅式都会携带 Cookie。但如果在第三⽅站点中使⽤ POST ⽅法或者通过 img、Iframe 等标签加载的 URL，这些场景都不会携带 Cookie")]),_._v(" "),v("li",[_._v("None：任何情况下都会发送 Cookie 数据")])])]),_._v(" "),v("li",[_._v("CSRF Token：提交请求时携带额外信息\n"),v("ul",[v("li",[_._v("用户打开页面的时候，服务器生成一个 token")]),_._v(" "),v("li",[_._v("每次页面加载的时候，加到所有的能发请求的 html 元素上, ⽐如 form, a")]),_._v(" "),v("li",[_._v("每次前端发起请求, 都携带 Token 参数")]),_._v(" "),v("li",[_._v("服务端每次接收请求, 都校验 Token 的有效性")])])])]),_._v(" "),v("h2",{attrs:{id:"_2、node-相关"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2、node-相关"}},[_._v("#")]),_._v(" 2、node 相关")]),_._v(" "),v("ul",[v("li",[_._v("本地文件操作相关，路径拼接导致的文件泄露")]),_._v(" "),v("li",[_._v("ReDos")]),_._v(" "),v("li",[_._v("时序攻击")]),_._v(" "),v("li",[_._v("ip origin referrer 等 request headers 的校验")])]),_._v(" "),v("h3",{attrs:{id:"_1、文件泄露"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1、文件泄露"}},[_._v("#")]),_._v(" 1、文件泄露")]),_._v(" "),v("p",[_._v("问题描述：静态文件服务，用户可通过输入路径获取私密文件")]),_._v(" "),v("p",[_._v("解决方法：")]),_._v(" "),v("ul",[v("li",[_._v("express：static")]),_._v(" "),v("li",[_._v("koa：中间件 koa-static")]),_._v(" "),v("li",[_._v("npm 包：resolve-path")])]),_._v(" "),v("h3",{attrs:{id:"_2、redos"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2、redos"}},[_._v("#")]),_._v(" 2、ReDos")]),_._v(" "),v("p",[_._v("问题描述：正则表达式攻击，服务器经常会有正则去匹配⼀些传⼊的参数, 所以攻击者就可以利⽤正在表达式的这个特性, 来⼀直占⽤服务器运算资源, 造成服务器宕机。")]),_._v(" "),v("p",[_._v("正则表达式⼀般情况下会去匹配第⼀种可能性，直接匹配到最后发现成功了, 耗时就很短；每当⼀次匹配不成功, 就会尝试回溯到上⼀个字符, 看看能不能有其他的组合来匹配到这个字符串.")]),_._v(" "),v("h3",{attrs:{id:"_3、时序攻击"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3、时序攻击"}},[_._v("#")]),_._v(" 3、时序攻击")]),_._v(" "),v("p",[_._v("根据服务器的响应时间来碰撞出 realArray 的值。")])])}),[],!1,null,null,null);v.default=e.exports}}]);